{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignedOutLinks","state","firebase","links","uid","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","console","log","signUp","newUser","getFirestore","createUserWithEmailAndPassword","response","doc","set","error","CreateProject","createProject","history","push","authorId","Date","now","add","App","exact","path","component","ProjectDetails","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","userProfile","useFirestoreForProfile","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","rrfProps","enableRedirectHandling","resetBeforeLogin","createFirestoreInstance","AuthIsLoaded","children","useSelector","isLoaded","src","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.19cd428c.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signOut } from '../../store/actions/authActions'\r\n\r\nconst SignedInLinks = (props) => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/create'>New Project</NavLink></li>\r\n            <li><a onClick={props.signOut}>Log out</a></li>\r\n            <li><NavLink to='/' className='btn btn-floating pink lighten-1'>\r\n                {props.profile.initials}\r\n            </NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks);","export const signIn = (credentials) => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() => {\r\n            dispatch({ type: 'LOGIN_SUCCESS' })\r\n        }).catch((err) => {\r\n            dispatch({ type: 'LOGIN_ERROR', err });\r\n        });\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({ type: 'SIGNOUT_SUCCESS' })\r\n        });\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((response) => {\r\n            return firestore.collection('users')\r\n                .doc(response.user.uid)\r\n                .set({\r\n                    firstName: newUser.firstName,\r\n                    lastName: newUser.lastName,\r\n                    initials: newUser.firstName[0] + newUser.lastName[0]\r\n                })\r\n        }).then(() => {\r\n            dispatch({ type: 'SIGNUP_SUCCESS' })\r\n        }).catch(error => {\r\n            dispatch({ type: 'SIGNUP_ERROR', error })\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst SignedOutLinks = () => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to='/signup'>Signup</NavLink></li>\r\n            <li><NavLink to='/signin'>Login</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default SignedOutLinks;","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport SignedInLinks from './SignedInLinks'\r\nimport SignedOutLinks from './SignedOutLinks'\r\nimport { connect } from 'react-redux';\r\n\r\nconst Navbar = (props) => {\r\n    const { auth, profile } = props;\r\n\r\n    const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />\r\n    return (\r\n        <nav className=\"nav-wrapper-grey-darken-3\">\r\n            <div className=\"container\">\r\n                <Link to='/' className=\"brand-logo\">MarioPlan</Link>\r\n                {/* {auth.isLoaded && links} */}\r\n                {links}\r\n                {/* <CreateProject /> */}\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    // console.log(state);\r\n    // console.log('hey' + state.firebase.profile.initials);\r\n    return {\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar);","import React from 'react'\r\nimport moment from 'moment';\r\n\r\nconst Notifications = (props) => {\r\n    const { notifications } = props;\r\n    return (\r\n        <div className=\"section\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\"> Notifications</span>\r\n                    <ul className=\"notifications\">\r\n                        {notifications && notifications.map(item => {\r\n                            return (\r\n                                <li key={item.id}>\r\n                                    <span className=\"pink-text\">{item.user} </span>\r\n                                    <span>{item.content}</span>\r\n                                    <div className=\"grey-text note-date\">\r\n                                        {moment(item.time.toDate()).fromNow()}\r\n                                    </div>\r\n                                </li>\r\n\r\n                            )\r\n                        }\r\n\r\n                        )}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notifications;","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nconst ProjectSummary = ({ project }) => {\r\n    return (\r\n        <div className=\"card z-depth-0 project-summary\">\r\n            <div className=\"card-content grey-text text-darken-3\">\r\n                <span className=\"card-title\">{project.title}</span>\r\n                <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\r\n                <p className=\"grey-text\"> {moment(project.createdAt.toDate()).calendar}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProjectSummary;","import React from 'react'\r\nimport ProjectSummary from './ProjectSummary'\r\nimport { Link } from 'react-router-dom'\r\n\r\n// new Date(time.seconds * 1000 + time.nanoseconds / 1000000);\r\nconst ProjectList = ({ projects }) => {\r\n    // console.log('TIME: ' + start);\r\n    return (\r\n        <div className=\"project-list-section\">\r\n            {projects && projects.map(project => {\r\n                return (\r\n                    <Link to={'/project/' + project.id} key={project.id}>\r\n                        <ProjectSummary project={project} />\r\n                    </Link>\r\n\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectList;","import React, { Component } from 'react'\r\nimport Notifications from './Notifications'\r\nimport ProjectList from '../projects/ProjectList'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\n\r\nclass Dashboard extends Component {\r\n    render() {\r\n        // console.log(this.props);\r\n        const { projects, auth, notifications } = this.props;\r\n        if (!auth.uid) return <Redirect to='/signin' />\r\n\r\n        return (\r\n            <div className=\"dashboard container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        <ProjectList projects={projects} />\r\n                    </div>\r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                        <Notifications notifications={notifications} />\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    // console.log(state.firebase.profile);\r\n    return {\r\n        projects: state.firestore.ordered.projects,\r\n        auth: state.firebase.auth,\r\n        notifications: state.firestore.ordered.notifications\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects', orderBy: ['createdAt', 'desc'] },\r\n        { collection: 'notifications', limit: 3, orderBy: ['time', 'desc'] }\r\n    ]))(Dashboard);","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { compose } from 'redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport moment from 'moment'\r\n\r\nconst ProjectDetails = (props) => {\r\n    const { project, auth } = props;\r\n    if (!auth.uid) return <Redirect to='/signin' />\r\n    if (project) {\r\n        return (\r\n            <div className=\"container section project-details\">\r\n                <div className=\"card z-depth-0\">\r\n                    <div className=\"card-content\">\r\n                        <span className=\"card-title\">{project.title}</span>\r\n                        <p>{project.content} </p>\r\n                    </div>\r\n                    <div className=\"card-action grey lighten-4 grey-text\">\r\n                        <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\r\n                        <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"container-center\">\r\n                <p>Loading project....</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    // console.log(state);\r\n    const id = ownProps.match.params.id;\r\n    const projects = state.firestore.data.projects;\r\n    const project = projects ? projects[id] : null\r\n    return {\r\n        project: project,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects' }\r\n    ])\r\n)(ProjectDetails);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { signIn } from '../../store/actions/authActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass SignIn extends Component {\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        });\r\n\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signIn(this.state);\r\n    }\r\n    render() {\r\n        const { authError, auth } = this.props;\r\n        if (auth.uid) return <Redirect to='/' />\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"Email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n                        <div className=\"red-text center\">\r\n                            {authError ? <p>{authError}</p> : null}\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapToDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn: (creds) => dispatch(signIn(creds))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapToDispatchToProps)(SignIn)\r\n","import React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { signUp } from '../../store/actions/authActions'\r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: '',\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        });\r\n\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(this.state);\r\n        this.props.signUp(this.state);\r\n    }\r\n    render() {\r\n        const { auth, authError } = this.props;\r\n        if (auth.uid) return <Redirect to='/' />\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"Email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"firstName\">First Name</label>\r\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"lastName\">Last Name</label>\r\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\r\n                    </div>\r\n                    <div className=\"red-text center\">\r\n                        {authError ? <p> {authError} </p> : null}\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signUp: (newUser) => dispatch(signUp(newUser))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { createProject } from '../../store/actions/projectActions'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass CreateProject extends Component {\r\n    state = {\r\n        title: '',\r\n        content: ''\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // console.log(this.state);\r\n        this.props.createProject(this.state);\r\n        this.props.history.push('/');\r\n    }\r\n    render() {\r\n        const { auth } = this.props;\r\n        if (!auth.uid) return <Redirect to='signin' />\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Create New Project</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\">Title</label>\r\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"content\">Content</label>\r\n                        <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n                    </div>\r\n                    <div className=\"inputfield\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        createProject: (project) => dispatch(createProject(project))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)","\r\nexport const createProject = (project) => {\r\n    return (dispatch, getState, { getFirestore, getFirebase }) => {\r\n        // make async call to database\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid;\r\n        const start = Date.now();\r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            authorFirstName: profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorId: authorId,\r\n            createdAt: new Date()\r\n        }).then(() => {\r\n            dispatch({ type: 'CREATE_PROJECT', project });\r\n        }).catch((err) => {\r\n            dispatch({ type: 'CREATE_PROJECT_ERROR', err });\r\n        })\r\n\r\n    }\r\n};","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Navbar from './components/layout/Navbar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport ProjectDetails from './components/projects/ProjectDetails'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport CreateProject from './components/projects/CreateProject'\n\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route exact path='/' component={Dashboard} />\n          <Route path='/project/:id' component={ProjectDetails} />\n          <Route path='/signin' component={SignIn} />\n          <Route path='/signup' component={SignUp} />\n          <Route path='/create' component={CreateProject} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\r\n    authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'LOGIN_ERROR':\r\n            console.log('LOGIN ERROR')\r\n            return {\r\n                ...state,\r\n                authError: 'Login failed'\r\n            }\r\n        case 'LOGIN_SUCESS':\r\n            console.log('LOGIN ERROR');\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log('signout success');\r\n            return state;\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log('signup success');\r\n            return {\r\n                ...state,\r\n                authError: null,\r\n            }\r\n        case 'SIGNUP_ERROR':\r\n            console.log('signup error');\r\n            return {\r\n                ...state,\r\n                authError: action.error.message\r\n            }\r\n        default: return state;\r\n    }\r\n\r\n}\r\n\r\nexport default authReducer","const initState = {\r\n    projects: [\r\n        { id: '1', title: 'help me find peach', content: 'blah blah blah' },\r\n        { id: '2', title: 'Hey, This', content: 'who is peach?' },\r\n        { id: '3', title: 'Okay. Buddy friend dude.', content: 'I don\\'t know dude, some princess' }\r\n\r\n    ]\r\n}\r\n// const projectReducer = (state = initState, action) => {\r\n//   switch (action.type) {\r\n//     case 'CREATE_PROJECT':\r\n//       console.log('create project', action.project);\r\n//   }\r\n//   return state;\r\n// };\r\nconst projectReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'CREATE_PROJECT':\r\n            console.log('create project', action.project);\r\n            return state;\r\n        case 'CREATE_PROJECT_ERROR':\r\n            console.log('create project error', action.err);\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n\r\nexport default projectReducer;","import authReducer from './authReducer'\r\nimport projectReducer from './projectReducer'\r\nimport { combineReducers } from 'redux'\r\nimport { firestoreReducer } from 'redux-firestore';\r\nimport { firebaseReducer } from 'react-redux-firebase';\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducer","import firebase from 'firebase'\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\n{/* <script src=\"https://www.gstatic.com/firebasejs/7.13.2/firebase-app.js\"></script> */ }\r\n\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyCEfnLEkHyLcn1cHP_KyW5_Z5l6GWAR1Ew\",\r\n    authDomain: \"ab-marioplan-46641.firebaseapp.com\",\r\n    databaseURL: \"https://ab-marioplan-46641.firebaseio.com\",\r\n    projectId: \"ab-marioplan-46641\",\r\n    storageBucket: \"ab-marioplan-46641.appspot.com\",\r\n    messagingSenderId: \"996844514481\",\r\n    appId: \"1:996844514481:web:17dbbaaf8557f0251b8690\",\r\n    measurementId: \"G-CDTYTW4QWX\",\r\n    userProfile: 'users',\r\n    useFirestoreForProfile: true,\r\n\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { createFirestoreInstance, reduxFirestore, getFirestore } from 'redux-firestore';\nimport { ReactReduxFirebaseProvider, getFirebase } from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig'\nimport firebase from 'firebase/app'\nimport { useSelector } from 'react-redux'\nimport { isLoaded } from 'react-redux-firebase'\n\nconst store = createStore(rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirestore, getFirebase })),\n    reduxFirestore(fbConfig, firebase)\n  )\n);\n\nconst profileSpecificProps = {\n  userProfile: 'users',\n  useFirestoreForProfile: true,\n  enableRedirectHandling: false,\n  resetBeforeLogin: false\n}\n\nconst rrfProps = {\n  firebase,\n  // config: fbConfig,\n  config: profileSpecificProps,\n  dispatch: store.dispatch,\n  createFirestoreInstance\n};\n\nfunction AuthIsLoaded({ children }) {\n  const auth = useSelector(state => state.firebase.auth)\n  if (!isLoaded(auth)) return <img src=\"/img/champion.jpg\" />;\n  return children\n}\n\nReactDOM.render(\n  <Provider store={store}>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n      <AuthIsLoaded>\n        <App />\n      </AuthIsLoaded>\n    </ReactReduxFirebaseProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}